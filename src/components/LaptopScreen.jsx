/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { Html, shaderMaterial, useGLTF } from "@react-three/drei";
import { extend, useFrame } from "@react-three/fiber";
import * as THREE from "three";
import laptopVertexShader from "../shaders/laptop/vertex.glsl";
import laptopFragmentShader from "../shaders/laptop/fragment.glsl";

const LaptopScreenMaterial = shaderMaterial(
  {
    uTime: 0,
    uColorStart: new THREE.Color("#153448"),
    uColorEnd: new THREE.Color("#FFEAE3"),
  },
  laptopVertexShader,
  laptopFragmentShader,
);

extend({ LaptopScreenMaterial });

export default function LaptopScreen(props) {
  const laptopScreenMaterial = useRef();
    useFrame((state, delta) => {
      laptopScreenMaterial.current.uTime = state.clock.elapsedTime * 0.5;
    });
  const { nodes, materials } = useGLTF("./models/laptopScreen.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.laptopScreen.geometry}
        position={[-1.723, 2.445, -5.504]}
        rotation={[-1.531, -0.146, 1.839]}
        scale={0.321}
      >
        <laptopScreenMaterial ref={laptopScreenMaterial} />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/laptopScreen.glb");
